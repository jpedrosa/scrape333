<!DOCTYPE html>
<html>
    <head>
        <title>Scrape</title>
        <meta name="description" content="Interface de scrape do projeto.">
        <meta name="keywords" content="scrape,desafio333,meta tags,imagens">
        <meta name="author" content="Joao Pedrosa">
        <meta property="og:title" content="Scrape do projeto para o Desafio333.">
        <meta property="og:description" content="Ferramenta de Scrape que retorna meta tags e imagens.">
        <meta property="og:site_name" content="Scrape333">
        <link rel="stylesheet" href="styles.css">
        <script>

"use strict";

const reURLStart = new RegExp("^([hH][tT][tT][pP][sS]?://|[fF][iI][lL][eE]:///)");

function escapeHtml(s) {
    return s.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
}

function el(id) {
    return document.getElementById(id);
}

function getFrutasURL() {
    const re = new RegExp("/[^/]*$");
    let s = window.location.href;
    return s.replace(re, "/frutas");
}

let resultsDivEl;

function presentResults(o) {
    let z = "";
    let images;
    let thumbnail;
    for (let [key, value] of Object.entries(o)) {
        key = escapeHtml(key);
        // Check whether it's the array of image srcs or not.
        if (typeof value === "string") {
            value = escapeHtml(value);
        }
        if (key === "images") {
            images = value;
        } else if (key === "thumbnail") {
            thumbnail = value;
        } else {
            z += `<span class="resultsKey">${key}:</span> ` +
                `<span class="resultsValue">${value}</span><br />`;
        }
    }
    if (thumbnail) {
        z += '<span class="resultsKey">thumbnail:</span><br />' +
            `<img src="${thumbnail}"><br />`;
    }
    if (images) {
        const a = images.map((src) => {
            return `${escapeHtml(src)}\n`;
            }).join("");
        z += '<span class="resultsKey">images:</span><br />' +
            `<textarea class="resultsImages">${a}</textarea>`;
    }
    resultsDivEl.innerHTML = z;
}

function handleError(o) {
    const s = o["scrapeError"];
    if (s) {
        resultsDivEl.innerHTML = '<span class="scrapeError">Erro:</span> ' +
            `<span class="scrapeErrorMessage">${escapeHtml(s)}</span> ` +
            "🤣 🤦 😜";;
        return false;
    }
    return true;
}

function scrape(url, jsonReqType) {
    const xhttp = new XMLHttpRequest();
    const serverUrl = window.location.href;
    // Como usabilidade, adiciona o prefix http:// se o URL estiver faltando.
    if (!reURLStart.test(url)) {
        url = `http://${url}`;
    }
    // O parâmetro true aqui indica que a chamada será async.
    xhttp.open('POST', serverUrl, true);
    xhttp.onreadystatechange = () => {
        if (xhttp.readyState === 4 && xhttp.status === 200) {
            const o = JSON.parse(xhttp.responseText);
            if (handleError(o)) {
                presentResults(o);
            }
        }
    }
    if (jsonReqType) {
        const params = {url: url};
        xhttp.setRequestHeader('Content-type', 'application/json;charset=UTF-8');
        xhttp.send(JSON.stringify(params));
    } else {
        const params = `url=${encodeURI(url)}`;
        xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhttp.send(params);
    }
}

window.addEventListener('DOMContentLoaded', () => {
    resultsDivEl = el("results");
    const formEl = el("scrapeForm");
    const urlEl = el("urlInput");
    const jsonReqTypeEl = el("jsonRequestType");
    urlEl.value = getFrutasURL();
    formEl.addEventListener("submit", (ev) => {
        // Interrompe o browser de tentar lidar com o form submit.
        ev.preventDefault();
        resultsDivEl.innerHTML = "";
        scrape(urlEl.value.trim(), jsonReqTypeEl.checked);
    });
});

        </script>
    </head>
    <body>
        <%- include("navigation") %>
        <h1>Scrape</h1>
        <form id="scrapeForm">
            <input id="urlInput" type="text" size="40" />
            <input type="submit" value="Scrape! 🔍" />
            Request type:
            <input id="jsonRequestType" type="radio" name="requestType" value="json" checked> JSON
            <input type="radio" name="requestType" value="form"> Form            
        </form>
        <div id="results" class="resultsPanel"></div>
    </body>
</html>
